{% extends 'layout.html.twig' %}

{% block content %}
    <h1>Hiking map</h1>
    <div>
        <form method="POST" action="/Hiking/baliseDisplay">
            {% if filter == 0 %}
                <input type="radio" onclick="submit()" name="filter" value="0" checked>
                <label class="filter-btn">Easy</label>
                <input type="radio" onclick="submit()" name="filter" value="1">
                <label class="filter-btn">Need wheels</label>
                <input type="radio" onclick="submit()" name="filter" value="2">
                <label class="filter-btn">All</label>
            {% elseif filter == 1 %}
                <input type="radio" onclick="submit()" name="filter" value="0">
                <label class="filter-btn">Easy</label>
                <input type="radio" onclick="submit()" name="filter" value="1" checked>
                <label class="filter-btn">Need wheels</label>
                <input type="radio" onclick="submit()" name="filter" value="2">
                <label class="filter-btn">All</label>
            {% else %}
                <input type="radio" onclick="submit()" name="filter" value="0">
                <label class="filter-btn">Easy</label>
                <input type="radio" onclick="submit()" name="filter" value="1">
                <label class="filter-btn">Need wheels</label>
                <input type="radio" onclick="submit()" name="filter" value="2" checked>
                <label class="filter-btn">All</label>
            {% endif %}
            
            {% for land in lands %}
                <div class="landCard">
                    <h3>{{ land.name }}</h3>
                    {% if land.id in baliseId %}
                        <input class="landChoose" onclick="submit()" type="checkbox" name="land{{ land.id }}" value="{{ land.id }}" checked>                                     
                    {% else %}
                        <input class="landChoose" onclick="submit()" type="checkbox" name="land{{ land.id }}" value="{{ land.id }}">                  
                    {% endif %}
                    <!--<input type="hidden" class="landCoords" value="{{ land.coordinate_X }}, {{ land.coordinate_Y }}">-->
                </div>
            {% endfor %}
        </form>
    </div>
    




    <input type="hidden" id="idPop" value={{ idPop.id }}>
    <input type="hidden" id="coordLands" value="{{ coordBalises }}">
    
    <div class="hikingCard">
        <canvas id ='marsCard' width="500" height="200" style = "background-image: url(/assets/images/mars-rando.png);">
            <div>
                <img id="balise" src="/assets/images/balise.png">
            </div>
        </canvas>
        <canvas id ='canevasRobot' width="500" height="200" >
            <div>
                <img id="percyImg" src="/assets/images/percy.png">
            </div>
        </canvas>
        <canvas id ='canevas3' width="500" height="200" ></canvas>
    </div>
    <div>
        {% if idPop['id'] != 0  and idPop['id'] in baliseId %}
            <p>POINT OF INTEREST</p>
            <h3>{{ idPop.name }}</h3>
            <p>{{ idPop.description }}</p>
            <img height="200px" width="200px" src="{{ idPop.url }}"> 
        {% endif %}
        
    </div>
    <p id="distance"></p>
    <button id="travel" type="button">Validate your tour</button>
    <a href="/home/index">Home</a>
{% endblock %}

{% block javascript %}
    <script>
        const idPop = document.getElementById("idPop").value;

        // transform string coord in array
        const tabBalise = document.getElementById("coordLands").value;
        const coordsBalises = tabBalise.split(' ');
        for (i=0; i<coordsBalises.length; i++) {
            coordsBalises[i] = coordsBalises[i].split('-');
            coordsBalises[i][0] = parseInt(coordsBalises[i][0]);
            coordsBalises[i][1] = parseInt(coordsBalises[i][1]);
            coordsBalises[i][2] = parseInt(coordsBalises[i][2]);
        }
        
        
        // button circuit
        const dist = document.getElementById("distance");
        let distance = 0;
        const btn = document.getElementById("travel");
        btn.addEventListener("click", function() {

            console.log(coordsBalises[0]);
            console.log(coordsBalises);
            for (let i=0; i<coordsBalises.length-1; i++) {
                    distance += Math.sqrt(Math.pow((coordsBalises[i][0] - coordsBalises[i+1][0]), 2)
                        + Math.pow((coordsBalises[i][1] - coordsBalises[i+1][1]), 2));
                setTimeout(() => {
                    Line(coordsBalises[i], coordsBalises[i+1]);
            //robot(coordsBalises[i], 40);
                }, 1000*(i+1));
        }
        Line(coordsBalises[coordsBalises.length-1], coordsBalises[0]);
        
        distance += Math.sqrt(Math.pow((coordsBalises[coordsBalises.length-1][0] - coordsBalises[0][0]), 2)
                    + Math.pow((coordsBalises[coordsBalises.length-1][1] - coordsBalises[0][1]), 2));
        dist.innerHTML = "The travel is " + Math.floor(distance) + " km.";
        });
        

        var c = document.getElementById("marsCard");
        var ctx = c.getContext("2d");

        window.onload = function() {
            var d = document.getElementById("canevas3");
            var ctx = d.getContext("2d");

            for (i=0; i<coordsBalises.length; i++) {
                if (coordsBalises[i][2] == idPop) {
                    balise(coordsBalises[i], 30);
                } else {
                    balise(coordsBalises[i], 20);
                }
            }
        };

    
        function Line(bal1, bal2) {
            //ctx.fillStyle="#FF8030";
            for (let j=0; j<20; j++)
            setTimeout(() => {
                ctx.beginPath();        
                //ctx.moveTo(bal1[0]+10, bal1[1]+20);
                //ctx.lineTo(bal2[0]+10, bal2[1]+20);
                let posRobot = [(bal1[0]+10)-(bal1[0]-bal2[0])*j/20-40, (bal1[1]+20)-(bal1[1]-bal2[1])*j/20-30];
                //console.log(posRobot);
                ctx.moveTo((bal1[0]+10)-(bal1[0]-bal2[0])*j/20, (bal1[1]+20)-(bal1[1]-bal2[1])*j/20);
                ctx.lineTo((bal1[0]+10)-(bal1[0]-bal2[0])*(j+1)/20, (bal1[1]+20)-(bal1[1]-bal2[1])*(j+1)/20);
                ctx.lineWidth = 3;
                ctx.strokeStyle = '#331040';
                ctx.stroke();
                robot(posRobot, 60);
            }, 50*(j+1));
        };

        function balise(baliseCoord, size) {
            var img1 = document.getElementById("balise");
            ctx.drawImage(img1, baliseCoord[0], baliseCoord[1], size, size);
        };

        var coords = [];
        var canvas = document.getElementById('canevas3');
        var context = canvas.getContext("2d");
        canvas.addEventListener('click', function (event) {
            coords = [event.layerX, event.layerY];
            //coords layer = coords canvas * 3 
            document.location.href="/Hiking/landDisplay/"+coords[0]+"/"+coords[1];
            //var pixelData = context.getImageData(event.layerX, event.layerY, 1, 1).data;
            //console.log(pixelData);
        }); 

        function robot(baliseCoord, size) {
            console.log(baliseCoord);
            var canesvasRobot = document.getElementById("canevasRobot");
            var ctxRobot = canevasRobot.getContext("2d");
            var img2 = document.getElementById("percyImg");
            ctxRobot.clearRect(0, 0, 500, 200); // vider le canevas
            ctxRobot.drawImage(img2, baliseCoord[0], baliseCoord[1], size, size);
        };


    </script>
{% endblock %}
